#include<bits/stdc++.h>
using namespace std;

//Mang a: Mang dung de sinh to hop, a[i] = x thi phan tu tai vi tri x-1 cua mang duoc loi ra
//VD: 1 3 5 --> Loi a0 a2 a4

int n, k, a[1000], ok;//ok: con sinh duoc

void kt(){ //khoi tao cau hinh dau tien
	for(int i=0;i<k;i++){
		a[i] = i+1;
	}
}

void sinh(){
	// Tim vi tri dau tien chua bang GTLN = n - k + (i+1)
	int i = k-1;
	while(i>=0&&a[i]==n - k + (i+1)){
		i--;
	}
	if(i==-1){
		ok = 0;
	} else {
		a[i]++;
		for(int j = i+1;j<k;j++){
			a[j] = a[j-1] + 1;
		}
	}
}

int checknt(int x){
	if(x<=1){
		return 0;
	} else {
		for(int i=2;i<=sqrt(x);i++){
			if(x%i==0) return 0;
		}
		return 1;
	}
}

int main(){
	int t;
	cin>>t;
	while(t--){
		int q, p, s;//k: so phan tu trong 1 bo, p: >=, s: tong
		cin>>q>>p>>s;
		k = q;
		kt();
		vector<int>b;//luu cac so nguyen to
		for(int i=p+1;i<=s;i++){
			if(checknt(i)==1) b.push_back(i);
		}
		n = b.size(); 
		ok=1;
		if(k>n){
			cout<<0<<endl;
		} else {
			vector<string>v;
			while(ok==1){
				int tong = 0;
				for(int i=0;i<k;i++){
					int val = a[i] - 1;
					tong += b[val];
				}
				if(tong==s){
					string sq="";
					for(int i=0;i<k;i++){
						int val = a[i] - 1;
						sq = sq + to_string(b[val]) + " ";
					}
					v.push_back(sq);
				}
				sinh();
			}
			cout<<v.size()<<endl;
		//	sort(v.begin(),v.end());
			for(auto i: v) cout<<i<<endl;
		}
	}
}
/*
20
2 7 28
1
11 17
3 2 23
2
3 7 13
5 7 11
4 6 195
0
5 7 175
124
11 13 17 31 103
11 13 17 37 97
11 13 17 61 73
11 13 19 23 109
11 13 19 29 103
11 13 19 31 101
11 13 19 43 89
11 13 19 53 79
11 13 19 59 73
11 13 19 61 71
11 13 23 31 97
11 13 23 61 67
11 13 29 43 79
11 13 31 37 83
11 13 31 41 79
11 13 31 47 73
11 13 31 53 67
11 13 31 59 61
11 13 37 41 73
11 13 37 43 71
11 13 37 47 67
11 13 37 53 61
11 13 41 43 67
11 13 43 47 61
11 17 19 31 97
11 17 19 61 67
11 17 23 41 83
11 17 23 53 71
11 17 29 47 71
11 17 31 37 79
11 17 31 43 73
11 17 37 43 67
11 17 41 47 59
11 19 23 43 79
11 19 29 37 79
11 19 29 43 73
11 19 31 41 73
11 19 31 43 71
11 19 31 47 67
11 19 31 53 61
11 19 37 41 67
11 19 37 47 61
11 19 41 43 61
11 23 29 41 71
11 23 29 53 59
11 23 31 37 73
11 23 31 43 67
11 23 37 43 61
11 23 41 47 53
11 29 31 37 67
11 29 31 43 61
11 31 37 43 53
13 17 19 23 103
13 17 19 29 97
13 17 19 37 89
13 17 19 43 83
13 17 19 47 79
13 17 19 53 73
13 17 19 59 67
13 17 23 43 79
13 17 29 37 79
13 17 29 43 73
13 17 31 41 73
13 17 31 43 71
13 17 31 47 67
13 17 31 53 61
13 17 37 41 67
13 17 37 47 61
13 17 41 43 61
13 19 23 31 89
13 19 23 37 83
13 19 23 41 79
13 19 23 47 73
13 19 23 53 67
13 19 23 59 61
13 19 29 31 83
13 19 29 41 73
13 19 29 43 71
13 19 29 47 67
13 19 29 53 61
13 19 31 41 71
13 19 31 53 59
13 19 37 47 59
13 19 41 43 59
13 19 43 47 53
13 23 29 31 79
13 23 29 37 73
13 23 29 43 67
13 23 31 37 71
13 23 31 41 67
13 23 31 47 61
13 23 37 41 61
13 23 37 43 59
13 29 31 41 61
13 29 31 43 59
13 29 37 43 53
13 31 37 41 53
13 31 41 43 47
17 19 23 37 79
17 19 23 43 73
17 19 29 31 79
17 19 29 37 73
17 19 29 43 67
17 19 31 37 71
17 19 31 41 67
17 19 31 47 61
17 19 37 41 61
17 19 37 43 59
17 23 29 47 59
17 23 31 37 67
17 23 31 43 61
17 29 31 37 61
17 31 37 43 47
19 23 29 31 73
19 23 29 37 67
19 23 29 43 61
19 23 31 41 61
19 23 31 43 59
19 23 37 43 53
19 29 31 37 59
19 29 31 43 53
19 29 37 43 47
19 31 37 41 47
23 31 37 41 43 */
